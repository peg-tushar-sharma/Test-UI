import { DealExpertTrain } from "../shared/interfaces/deal-expert-train";
import { Employee } from "../shared/interfaces/Employee";
import { Region } from "../shared/interfaces/region";
import { clientAllocations } from "./deal";
import { DealTrackerClient } from "./deal-tracker-client";
import { DealRegistrations } from "./dealRegistrations";
import { dateTrack } from "./new-deal/deal-context/deal-process/dateTracker";
import { expertGroup } from "./new-deal/deal-experts/expertGroup";

export class DealTracker {
    dealId: number;
    targetName: string;
    mbStatus: number;
    sellSideStatus: number;
    dealStatus: number;
    publiclyTraded: boolean;
    notes: string;
    redbookAvailable: number = 0;
    managedBy: string;
    submittedBy: Employee;
    createdOn: string;
    nickname: string;
    owner: string;
    dealRegistrations: DealRegistrations[];
    clients: DealTrackerClient[];
    expertGroup: expertGroup[];
    targetCountry: string;
    dealRegion: Region[];
    currentEBITDA: string;
    dealSize: string;
    targetDescription: string;
    isMasked: boolean;
    fieldName: string;
    importantDates: dateTrack[] = [];
    vddProvider: string;
    bankRunningProcess: string;
    bankProcessName: string;
    transactedTo: string;
    transactedDate: any;
    supportedWinningBidder: string;
    processExpectation: string;
    isExpertTrainUpCall?: boolean;
    supportRequested: boolean;
    expertLineupPrepared: boolean;
    expertOnBoard: boolean;
    submissionDate: any;
    priorWork: string;
    dateOfCall: any;
    industries: any;
    sectors: any;
    subSectors: any;
    mbAdvisors: Employee[] = [];    
    clientAllocations: clientAllocations[];
    trainers: DealExpertTrain[];
    attendees: DealExpertTrain[];
    sentTo: DealExpertTrain[];
    isDealNews:boolean;
   
    constructor() {
        this.dealId = 0;
        this.targetName = '';
        this.mbStatus = 0;
        this.dealStatus = 0;
        this.publiclyTraded = false;
        this.notes = '';
        this.redbookAvailable = 0;
        this.managedBy = '';
        this.submittedBy = null;
        this.createdOn = '';
        this.owner = '';
        this.nickname = '';
        this.dealRegistrations = [];
        this.clients = [];
        this.targetCountry = null;        
        this.currentEBITDA = null;
        this.dealSize = null;
        this.targetDescription = null;
        this.isMasked = false;
        this.fieldName = null;
        this.importantDates = [];
        this.vddProvider = '';
        this.bankRunningProcess = '';
        this.bankProcessName = '';
        this.transactedTo = '';
        this.supportedWinningBidder = '';
        this.isDealNews=false;
    }
}